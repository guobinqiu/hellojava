pipeline {
    agent any

    tools {
        maven 'mvn_3.9.6'
    }

    environment {
        GOPROXY = 'https://goproxy.cn,direct'
        // KUBECONFIG = '/var/lib/jenkins/.kube/config'
    }

    stages {
        stage('Build') {
            steps {
                sh 'mvn clean package' //清理+打包, 只是为了保证编译通过
            }
        }
        stage('Static Analysis') {
            steps {
                //withSonarQubeEnv是SonarQube Scanner for Jenkins插件提供的一个函数
                withSonarQubeEnv('sonarqube_server') {
                    sh '/opt/sonar-scanner/bin/sonar-scanner'
                }
            }
        }
        stage('Deploy with Kubectl') {
            steps {
                //withCredentials是Credentials Binding Plugin插件提供的一个函数, 凭证类型:Username with password
                withCredentials([
                    usernamePassword(credentialsId: '75d62f1f-d4a5-4033-b0b9-eb05ffb862be', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')
                ]) {
                    sh """
                    docker build -t qiuguobin/hellojava -f Dockerfile .
                    docker tag qiuguobin/hellojava qiuguobin/hellojava-${GIT_COMMIT}
                    echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin
                    docker push qiuguobin/hellojava
                    docker push qiuguobin/hellojava-${GIT_COMMIT}
                    """
                }

                //withKubeConfig是Kubernetes CLI Plugin插件提供的一个函数, 凭证类型:Secret file
                withKubeConfig(credentialsId: '35b0ef8a-e4e7-4c14-8738-2adf2a3a54d0', contextName: 'kubernetes-admin@cluster.local') {
                    sh 'kubectl apply -f k8s/deploy.yaml'
                }
            }
        }
    }
}
